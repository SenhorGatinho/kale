$AD5E: check special level properties
$9E92 (25EA2 in US PRG0) = 6-byte structure consisting of:
0: low byte of room number
1: ?? (value in $78C8 << 1) + high bit of room number
        - both $FF: end of list
 
2: Entry type:
        - FE: Wind
        - FF: Screen lock
        - Else: Midboss "door", X. (See next)
 
Door:
2: Top tile X position (high nibble: screen (x, top row), low nibble: tile x)
3: Top tile Y position (low nibble = tile y, high nibble = value in $78CF/screen y? (glitchy))
4: tile to cover up door with (top)
5: tile to cover up door with (bottom)
Only works properly at the top row of the level, in lower screens it will be misplaced and missing the top tile
 
Wind (FE)
3: Type
- $00: weak, upwards
- $01: normal, upwards (used in 3-4)
- $02: strong, upwards
- $03: weak, right
- $04: normal, right (used in 4-3)
- $05: strong, right
- $06: weak, down
- $07: normal, down
- $08: strong, down
- $09: weak, left
- $0A: normal, left
- $0B: strong, left
- $FF: no wind
(4, 5: unused)
Higher ones than 0B obviously load garbage data, but is worth mentioning they give diagonal momentum.
Overrides all "push" tile behaviour
 
Screen lock (FF)
3: 02 = lock scroll, free when midboss defeated
        (03 = lock scroll when midboss defeated? (glitch))
4: position in pixels within the screen at which to lock it
5: screen to the lock scroll at
Horizontal scroll only
 
Notes:
There can only be one screen lock OR door per room. (first used)
There can only be one wind type per room. (last used)
-------------------
 
$AE4D: create door after boss destroyed
$78C8 = ?
$78C9 = screen scrolling control?
$78CA = door top tile / locked screen x-scroll position LSB (in pixels)
$78CB = door bottom tile / locked screen x-scroll position MSB
$78CC = door X pos << 4?
$78CD = door X screen? (-> $4B)
$78CE = door Y pos << 4
$78CF = door Y screen? (-> $4C)
$78D0 = wind type